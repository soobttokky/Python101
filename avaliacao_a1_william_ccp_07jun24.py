# -*- coding: utf-8 -*-
"""Avaliacao_A1_William_CCP_07jun24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ys26hxhXXPmX0Je6_RGuunsNn_EUbXiq
"""

'''
Nome: William Cavalcante da Silva

RGM: 1434383212

Tema:

links:

- https://panda.ime.usp.br/panda/static/cc110/index.html

- Curso Intensivo de Python: Uma introdução prática e baseada em projetos à programação, Eric matthes:
Disponívem em Português: https://edisciplinas.usp.br/pluginfile.php/6585696/mod_resource/content/1/Eric%20Matthes%20-%20Curso%20Intensivo%20de%20Python-Novatec%20%282016%29.pdf

Regras:

- Utilizar o ZEN do Python - 1 ponto na A1;

- Complexo ou Complicado? Faça um programa que informe o número de loops para um contador que imprima todos os números primos de 1 a 100.
'''

"""### ZEN of Python - 1° Regra

"""

# ZEN of Python - 1° Regra

import this #---->  coleção de 19 princípios orientadores que influenciam o design da linguagem de programação Python.
            #Esses princípios foram escritos pelo engenheiro de software Tim Peters e são conhecidos como PEP-20.
            #Eles abordam tópicos como legibilidade, simplicidade, explicitação e tratamento de erros

"""### Complexo ou Complicado? - 3° Regra"""

#Complexo ou Complicado? - 3° Regra - Faça um programa que informe o número de loops para um contador que imprima todos os números primos de 1 a 100.
import math #importando a biblioteca 'Math'
def primo(number):

    #Verifica se o número é primo
    if number < 2:
        return False  #Contador = 'i'

    # Repete os numeros sobre o intervalo de 2 até a raiz quadrada do número
    for contador in range(2, int(math.sqrt(number)) + 1):
      '''range(2, int(math.sqrt(number)) + 1): Esta é uma função que cria um intervalo de números.
      No caso, começa em 2 (pois os números primos são maiores que 1) e termina em int(math.sqrt(number)) + 1.
      O int(math.sqrt(number)) calcula a raiz quadrada de number, e a função int() arredonda esse valor para o inteiro mais próximo.
      Adicionamos 1 para garantir que o último número seja incluído no intervalo.'''
      if number % contador == 0:
         return False
    return True

def main():

    #Imprime todos os números primos de 1 a 100.
    print("Os números primos de 1 a 100 são:")
    count = 0  #Contador de loops
    for num in range(1, 101):
        if primo(num):
            count += 1
            print(num)
    print(f"Número de loops: {count}")

if __name__ == "__main__":
    main()

#Complexo ou Complicado? - 3° Regra - Faça um programa que informe o número de loops para um contador que imprima todos os números inteiros de 1 a 100.
#Eu faltei esse dia e duas pessoas diferentes me deram duas instruções diferentes pra essa atividade então fiz as duas, mas voce pode desconsiderar a que não foi pedida em sala de aula.

def main():

    # Imprime todos os números inteiros de 1 a 100.
    print("Os números inteiros de 1 a 100 são:")
    count = 0  # Contador de loops
    for num in range(1, 101):
        count += 1
        print(num)
    print(f"Número de loops: {count}")

if __name__ == "__main__":
    main()

"""### Exemplos da Professora

"""

#Exemplo da professora:

import this

for contador in range (1, 101):
  print(contador)

#Com Do While:

contador = 0 # Variavel inicia zerado

while contador < 101: # Comando repete todo o codigo enquanto a condicional não for atingida
  print(contador)
  contador=contador+1 # Adiciona +1 a variavel

contador = 1

while contador > 0 and contador < 11: #usando operador logico
  print(contador)
  contador += 1

"""### Algoritmos de Busca"""

''' Algorítimos de Busca '''

# O que é busca?


# Criar DatFrame bidimensional de Heliportos em Brasília com Pandas e Python

import pandas as pd
# importa a biblioteca 'Pandas'

# criando tuplas
heliporto_nome = ["SJDF", "SNHF", "SDHH", "SI4J","SNAW","HFA", "SIHQ", "SJWY","HRC", "SNCN", "SWWR", "SIIY", "SWSW", "HRG", "hospital regional de brazlandia"]
heliporto_endereco = ["Centro de Excelencia Anchieta", "Figaro", "Base Resgate", "Raul Saboia", "SENAI/SESI/CNI", "Hospital das forcas armadas", "Aguas Claras", "Parkway", "Hospital regional de ceilandia", "Edifício Parque Cidade Corporate", "Autódromo Internacional de Brasília", "Complexo Brasil 21", "PCDF", "Hospital regional do Gama", "Hospital regional de brazlandia"]

dados_heliporto = {
    'Nome do Heliporto' : heliporto_nome,
    'Endereço do Heliporto' : heliporto_endereco,
}

heliportos_df = pd.DataFrame(dados_heliporto)  # ---> comando do pandas
print(heliportos_df.shape)
display(heliportos_df)

"""### Exercicios

"""

'''
**Exercício 1**:
Escreva um programa que leia uma sequência com N números reais e imprime a sequência eliminando os elementos repetidos.
'''
def ler_sequencia():

  #lê uma sequência de números reais e retorna uma lista com os números.
  n = int(input("Digite o número de elementos da sequência: "))
  sequencia = []
  for i in range(n):
    numero = float(input("Digite o elemento " + str(i + 1) + ": "))
    sequencia.append(numero)
  return sequencia

def eliminar_repetidos(sequencia):

  #elimina os elementos repetidos de uma sequência e retorna uma nova sequência sem repetições.
  nova_sequencia = []
  for elemento in sequencia:
    if elemento not in nova_sequencia:
      nova_sequencia.append(elemento)
  return nova_sequencia

def main():

  #lê uma sequência de números reais e imprime a sequência eliminando os elementos repetidos.
  sequencia = ler_sequencia()
  nova_sequencia = eliminar_repetidos(sequencia)
  print("A sequência sem elementos repetidos é:")
  for elemento in nova_sequencia:
    print(elemento)

if __name__ == "__main__":
  main()